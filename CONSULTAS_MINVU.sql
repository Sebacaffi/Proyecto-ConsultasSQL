--DESARROLLO CONSULTAS SQL--

-- 3.1.	RESUMEN DEL TOTAL DE POSTULANTES Al SUBSIDIO POR REGIÓN 
SELECT 'Región ' || R.NOMBRE_REGION "REGION",

       NVL(COUNT(CASE 
           WHEN OS.NOM_TITULO_TRAMO = 'TITULO I TRAMO 1' THEN OS.NOM_TITULO_TRAMO
       END), 0) "TITULO I TRAMO 1",
       NVL(COUNT(CASE 
           WHEN OS.NOM_TITULO_TRAMO = 'TITULO I TRAMO 2' THEN OS.NOM_TITULO_TRAMO
       END), 0) "TITULO I TRAMO 2",
       NVL(COUNT(CASE 
           WHEN OS.NOM_TITULO_TRAMO = 'TITULO II' THEN OS.NOM_TITULO_TRAMO
       END), 0) "TITULO II",
       COUNT(P.RUN_POSTULANTE) "TOTAL POSTULANTES"
FROM SYN_POSTULANTE P
JOIN SYN_POSTULACION PO ON (PO.RUN_POSTULANTE = P.RUN_POSTULANTE)
JOIN SYN_OPCION_SUBSIDIO OS ON (OS.ID_SUBSIDIO = PO.ID_SUBSIDIO)
JOIN SYN_COMUNA C ON (C.ID_COMUNA = P.ID_COMUNA)
JOIN SYN_REGION R ON (R.ID_REGION = C.ID_REGION)
GROUP BY 'Región ' || R.NOMBRE_REGION
ORDER BY "REGION";


------------------------------------------------------------------------------------------------------------------------------------------

-- 3.2. DETALLE DE POSTULANTES AL SUBSIDIO
SELECT PO.NRO_FOLIO "NRO FOLIO",
       P.RUN_POSTULANTE || '-' || P.DVRUN_POSTULANTE "RUN POSTULANTE",
       P.PNOMBRE_POSTULANTE || ' ' || P.SNOMBRE_POSTULANTE || ' ' || P.APATERNO_POSTULANTE || ' ' || P.AMATERNO_POSTULANTE "NOMBRE POSTULANTE",
       TO_CHAR(PO.FECHA_POSTULACION, 'DD/MM/YYYY') "FECHA POSTULACION",
       EC.DESC_ESTADO "ESTADO CIVIL",
       P.DIRECCION_POSTULANTE || ', ' || C.NOMBRE_COMUNA "DIRECCION",
       OS.NOM_TITULO_TRAMO "OPCION DE POSTULACION",
       CASE
           WHEN CA.MONTO_AHORRADO >= OS.AHORRO_MINIMO_UF * 29057 THEN 'Si cumple, será considerado en el proceso'
           ELSE 'No cumple, no será considerado en el proceso' 
       END "CUMPLE CON REQUISITOS"
FROM SYN_POSTULACION PO
JOIN SYN_POSTULANTE P ON (P.RUN_POSTULANTE = PO.RUN_POSTULANTE)
JOIN SYN_ESTADO_CIVIL EC ON (EC.ID_ESTADO_CIVIL = P.ID_ESTADO_CIVIL)
JOIN SYN_COMUNA C ON (C.ID_COMUNA = P.ID_COMUNA)
JOIN SYN_OPCION_SUBSIDIO OS ON (OS.ID_SUBSIDIO = PO.ID_SUBSIDIO)
JOIN SYN_CUENTA_AHORRO CA ON (CA.NRO_CUENTA = PO.NRO_CUENTA);


----------------------------------------------------------------------------------------------------------------------------------------------------

-- 3.3. PUNTAJES OBTENIDOS POR CADA POSTULANTE AL SUBSIDIO
  SELECT TO_CHAR(P.RUN_POSTULANTE, '99G999G999') || '-' || P.DVRUN_POSTULANTE "RUN POSTULANTE",
         P.PNOMBRE_POSTULANTE || ' ' || P.SNOMBRE_POSTULANTE || ' ' || P.APATERNO_POSTULANTE || ' ' || P.AMATERNO_POSTULANTE "NOMBRE POSTULANTE",
         TRUNC(MONTHS_BETWEEN(SYSDATE, P.FECHA_NAC) / 12) "EDAD",
         PE.PUNTAJE "PTJE. EDAD",
         A.CANT_CARGAS "CARGAS FAM.",
         PC.PUNTAJE "PTJE. CARGAS FAM.",
         EC.DESC_ESTADO "EST. CIVIL",
         PES.PUNTAJE "PTJE. EST. CIVIL",
         NVL(POR.NOM_PUEBLO, 'No') "PUEBLO IND. ORIG.",
         NVL2(P.ID_PUEBLO, 500, 0) "PTJE. PUEBLO IND. ORIG.",
         TO_CHAR(CA.MONTO_AHORRADO, '$999G999G999') "MONTO AHORRO",
         PA.PUNTAJE "PTJE. MONTO AHORRO",
         T.NOM_TITULO "TITULO" ,
         PT.PUNTAJE "PTJE. TITULO" ,
         CASE 
            WHEN R.ID_REGION IN (15, 1, 11, 12) THEN 'SI'
            ELSE 'NO'
         END "ZONA EXTREMA",
         CASE 
            WHEN R.ID_REGION IN (15, 1, 11, 12) THEN 1000
            ELSE 0
         END "PTJE. ZONA EXTREMA",
         PE.PUNTAJE + PC.PUNTAJE + PES.PUNTAJE + NVL2(P.ID_PUEBLO, 500, 0) + PA.PUNTAJE + PT.PUNTAJE + 
         CASE 
            WHEN R.ID_REGION IN (15, 1, 11, 12) THEN 1000
            ELSE 0
        END "PTJE. TOTAL"
FROM SYN_POSTULANTE P
JOIN (SELECT RUN_POSTULANTE, COUNT(RUN_POSTULANTE) CANT_CARGAS
      FROM SYN_CARGA_FAMILIAR
      GROUP BY RUN_POSTULANTE) A ON (A.RUN_POSTULANTE = P.RUN_POSTULANTE)
JOIN SYN_CARGA_FAMILIAR CF ON (CF.RUN_POSTULANTE = P.RUN_POSTULANTE)
JOIN SYN_ESTADO_CIVIL EC ON (EC.ID_ESTADO_CIVIL = P.ID_ESTADO_CIVIL)
JOIN SYN_POSTULACION PO ON (PO.RUN_POSTULANTE = P.RUN_POSTULANTE)
JOIN SYN_CUENTA_AHORRO CA ON (CA.NRO_CUENTA = PO.NRO_CUENTA)
JOIN SYN_TITULO T ON (T.ID_TITULO = P.ID_TITULO)
JOIN SYN_COMUNA CO ON (CO.ID_COMUNA = P.ID_COMUNA)
JOIN SYN_REGION R ON (R.ID_REGION = CO.ID_REGION)
LEFT JOIN SYN_PUEBLO_ORIGINARIO POR ON (POR.ID_PUEBLO = P.ID_PUEBLO)
JOIN SYN_PUNTAJE_EDAD PE ON (TRUNC(MONTHS_BETWEEN(SYSDATE, P.FECHA_NAC) / 12) BETWEEN PE.EDAD_DESDE AND PE.EDAD_HASTA)
JOIN SYN_PUNTAJE_CARGA PC ON (A.CANT_CARGAS BETWEEN PC.MIN_CARGA AND PC.MAX_CARGA)
JOIN SYN_PUNTAJE_ESTADO PES ON (PES.DESC_ESTADO = EC.DESC_ESTADO)
JOIN SYN_PUNTAJE_AHORRO PA ON (CA.MONTO_AHORRADO BETWEEN PA.MIN_VALOR AND PA.MAX_VALOR)
JOIN SYN_PUNTAJE_TITULO PT ON (PT.DESC_TITULO = T.TIPO_TITULO)
ORDER BY P.APATERNO_POSTULANTE DESC, "PTJE. TOTAL" DESC;


--------------------------------------------------------------------------------------------------------------------------------------------

-- 3.4) 

--* VISTA QUE ALMACENA LOS PUNTAJES DE TODOS LOS POSTULANTES
 CREATE VIEW V_PUNTAJE_POSTULANTES AS
 SELECT TO_CHAR(P.RUN_POSTULANTE, '99G999G999') || '-' || P.DVRUN_POSTULANTE "RUN POSTULANTE",
         TRUNC(MONTHS_BETWEEN(SYSDATE, P.FECHA_NAC) / 12) EDAD,
         PE.PUNTAJE "PTJE. EDAD",
         A.CANT_CARGAS "CARGAS FAM.",
         PC.PUNTAJE "PTJE. CARGAS FAM.",
         EC.DESC_ESTADO "EST. CIVIL",
         PES.PUNTAJE "PTJE. EST. CIVIL",
         NVL(POR.NOM_PUEBLO, 'No') "PUEBLO IND. ORIG.",
         NVL2(P.ID_PUEBLO, 500, 0) "PTJE. PUEBLO IND. ORIG.",
         TO_CHAR(CA.MONTO_AHORRADO, '$999G999G999') "MONTO AHORRO",
         PA.PUNTAJE "PTJE. MONTO AHORRO",
         T.NOM_TITULO "TITULO" ,
         PT.PUNTAJE "PTJE. TITULO" ,
         CASE 
            WHEN R.ID_REGION IN (15, 1, 11, 12) THEN 'Región ' || R.NOMBRE_REGION
            ELSE 'NO'
         END "ZONA EXTREMA",
         CASE 
            WHEN R.ID_REGION IN (15, 1, 11, 12) THEN 1000
            ELSE 0
         END "PTJE. ZONA EXTREMA",
         PE.PUNTAJE + PC.PUNTAJE + PES.PUNTAJE + NVL2(P.ID_PUEBLO, 500, 0) + PA.PUNTAJE + PT.PUNTAJE + 
         CASE 
            WHEN R.ID_REGION IN (15, 1, 11, 12) THEN 1000
            ELSE 0
        END PUNTAJE_TOTAL,
        V.TIPO_VIVIENDA "TIPO DE VIVIENDA SUBSIDIADA",
        TO_CHAR(V.VALOR_VIVIENDA, '$999G999G999') "VALOR VIVIENDA",
        TO_CHAR(OS.MONTO_SUBSIDIO * 29070, '$999G999G999') "MONTO SUBSIDIO"
FROM SYN_POSTULANTE P
JOIN (SELECT RUN_POSTULANTE, COUNT(RUN_POSTULANTE) CANT_CARGAS
      FROM SYN_CARGA_FAMILIAR
      GROUP BY RUN_POSTULANTE) A ON (A.RUN_POSTULANTE = P.RUN_POSTULANTE)
JOIN SYN_CARGA_FAMILIAR CF ON (CF.RUN_POSTULANTE = P.RUN_POSTULANTE)
JOIN SYN_ESTADO_CIVIL EC ON (EC.ID_ESTADO_CIVIL = P.ID_ESTADO_CIVIL)
JOIN SYN_POSTULACION PO ON (PO.RUN_POSTULANTE = P.RUN_POSTULANTE)
JOIN SYN_CUENTA_AHORRO CA ON (CA.NRO_CUENTA = PO.NRO_CUENTA)
JOIN SYN_TITULO T ON (T.ID_TITULO = P.ID_TITULO)
JOIN SYN_COMUNA CO ON (CO.ID_COMUNA = P.ID_COMUNA)
JOIN SYN_REGION R ON (R.ID_REGION = CO.ID_REGION)
JOIN SYN_VIVIENDA V ON (V.ID_VIVIENDA = PO.ID_VIVIENDA)
JOIN SYN_OPCION_SUBSIDIO OS ON (OS.ID_SUBSIDIO = PO.ID_SUBSIDIO)
LEFT JOIN SYN_PUEBLO_ORIGINARIO POR ON (POR.ID_PUEBLO = P.ID_PUEBLO)
JOIN SYN_PUNTAJE_EDAD PE ON (TRUNC(MONTHS_BETWEEN(SYSDATE, P.FECHA_NAC) / 12) BETWEEN PE.EDAD_DESDE AND PE.EDAD_HASTA)
JOIN SYN_PUNTAJE_CARGA PC ON (A.CANT_CARGAS BETWEEN PC.MIN_CARGA AND PC.MAX_CARGA)
JOIN SYN_PUNTAJE_ESTADO PES ON (PES.DESC_ESTADO = EC.DESC_ESTADO)
JOIN SYN_PUNTAJE_AHORRO PA ON (CA.MONTO_AHORRADO BETWEEN PA.MIN_VALOR AND PA.MAX_VALOR)
JOIN SYN_PUNTAJE_TITULO PT ON (PT.DESC_TITULO = T.TIPO_TITULO)
ORDER BY P.RUN_POSTULANTE;


-- POSTULANTES FAVORECIDOS CON EL SUBSIDIO 
SELECT * 
FROM V_PUNTAJE_POSTULANTES
WHERE PUNTAJE_TOTAL > (SELECT AVG (PUNTAJE_TOTAL)
                       FROM V_PUNTAJE_POSTULANTES);


------------------------------------------------------------------------------------------------------------------------------------------

-- 3.5)	

-- VISTA QUE ...
CREATE VIEW V_PUNTAJES AS 
 SELECT TO_CHAR(P.RUN_POSTULANTE, '99G999G999') || '-' || P.DVRUN_POSTULANTE RUN_POSTULANTE,
         P.PNOMBRE_POSTULANTE || ' ' || P.SNOMBRE_POSTULANTE || ' ' || P.APATERNO_POSTULANTE || ' ' || P.AMATERNO_POSTULANTE NOMBRE_POSTULANTE,
         P.DIRECCION_POSTULANTE || ', ' || CO.NOMBRE_COMUNA DIRECCION,
         OS.NOM_TITULO_TRAMO OPCION_SUBSIDIO,
         V.TIPO_VIVIENDA TIPO_VIVIENDA,
         CA.NRO_CUENTA NRO_CUENTA,
         EF.NOM_ENTIDAD ENTIDAD,
         PC.PUNTAJE "PTJE. CARGAS FAM.",
         PES.PUNTAJE "PTJE. EST. CIVIL",
         NVL2(P.ID_PUEBLO, 500, 0) "PTJE. PUEBLO IND. ORIG.",
         PA.PUNTAJE "PTJE. MONTO AHORRO",
         PT.PUNTAJE "PTJE. TITULO",
         CASE 
            WHEN R.ID_REGION IN (15, 1, 11, 12) THEN 1000
            ELSE 0
         END "PTJE. ZONA EXTREMA",
         PE.PUNTAJE + PC.PUNTAJE + PES.PUNTAJE + NVL2(P.ID_PUEBLO, 500, 0) + PA.PUNTAJE + PT.PUNTAJE + 
         CASE 
            WHEN R.ID_REGION IN (15, 1, 11, 12) THEN 1000
            ELSE 0
        END PUNTAJE_TOTAL
FROM SYN_POSTULANTE P
JOIN (SELECT RUN_POSTULANTE, COUNT(RUN_POSTULANTE) CANT_CARGAS
      FROM SYN_CARGA_FAMILIAR
      GROUP BY RUN_POSTULANTE) A ON (A.RUN_POSTULANTE = P.RUN_POSTULANTE)
JOIN SYN_CARGA_FAMILIAR CF ON (CF.RUN_POSTULANTE = P.RUN_POSTULANTE)
JOIN SYN_ESTADO_CIVIL EC ON (EC.ID_ESTADO_CIVIL = P.ID_ESTADO_CIVIL)
JOIN SYN_POSTULACION PO ON (PO.RUN_POSTULANTE = P.RUN_POSTULANTE)
JOIN SYN_CUENTA_AHORRO CA ON (CA.NRO_CUENTA = PO.NRO_CUENTA)
JOIN SYN_TITULO T ON (T.ID_TITULO = P.ID_TITULO)
JOIN SYN_COMUNA CO ON (CO.ID_COMUNA = P.ID_COMUNA)
JOIN SYN_REGION R ON (R.ID_REGION = CO.ID_REGION)
JOIN SYN_VIVIENDA V ON (V.ID_VIVIENDA = PO.ID_VIVIENDA)
JOIN SYN_OPCION_SUBSIDIO OS ON (OS.ID_SUBSIDIO = PO.ID_SUBSIDIO)
JOIN SYN_ENTIDAD_FINANCIERA EF ON (EF.ID_ENTIDAD = CA.ID_ENTIDAD)
LEFT JOIN SYN_PUEBLO_ORIGINARIO POR ON (POR.ID_PUEBLO = P.ID_PUEBLO)
JOIN SYN_PUNTAJE_EDAD PE ON (TRUNC(MONTHS_BETWEEN(SYSDATE, P.FECHA_NAC) / 12) BETWEEN PE.EDAD_DESDE AND PE.EDAD_HASTA)
JOIN SYN_PUNTAJE_CARGA PC ON (A.CANT_CARGAS BETWEEN PC.MIN_CARGA AND PC.MAX_CARGA)
JOIN SYN_PUNTAJE_ESTADO PES ON (PES.DESC_ESTADO = EC.DESC_ESTADO)
JOIN SYN_PUNTAJE_AHORRO PA ON (CA.MONTO_AHORRADO BETWEEN PA.MIN_VALOR AND PA.MAX_VALOR)
JOIN SYN_PUNTAJE_TITULO PT ON (PT.DESC_TITULO = T.TIPO_TITULO)
ORDER BY R.NOMBRE_REGION, P.APATERNO_POSTULANTE;


--	POSTULANTES QUE NO FUERON FAVORECIDOS CON EL SUBSIDIO
SELECT RUN_POSTULANTE "RUN POSTULANTE",
       NOMBRE_POSTULANTE "NOMBRE POSTULANTE",
       DIRECCION,
       OPCION_SUBSIDIO "OPCION DE SUBSIDIO",
       TIPO_VIVIENDA "TIPO CASA POSTULO",
       NRO_CUENTA "NRO CUENTA",
       ENTIDAD "INSTITUCION FINANCIERA"
FROM V_PUNTAJES
WHERE PUNTAJE_TOTAL <= (SELECT AVG(PUNTAJE_TOTAL)
                        FROM V_PUNTAJES);


-- SOLUCIÓN UTILIZANDO OPERADORES SET
SELECT RUN_POSTULANTE "RUN POSTULANTE",
       NOMBRE_POSTULANTE "NOMBRE POSTULANTE",
       DIRECCION,
       OPCION_SUBSIDIO "OPCION DE SUBSIDIO",
       TIPO_VIVIENDA "TIPO CASA POSTULO",
       NRO_CUENTA "NRO CUENTA",
       ENTIDAD "INSTITUCION FINANCIERA"
FROM V_PUNTAJES
MINUS
SELECT RUN_POSTULANTE "RUN POSTULANTE",
       NOMBRE_POSTULANTE "NOMBRE POSTULANTE",
       DIRECCION,
       OPCION_SUBSIDIO "OPCION DE SUBSIDIO",
       TIPO_VIVIENDA "TIPO CASA POSTULO",
       NRO_CUENTA "NRO CUENTA",
       ENTIDAD "INSTITUCION FINANCIERA"
FROM V_PUNTAJES
WHERE PUNTAJE_TOTAL > (SELECT AVG(PUNTAJE_TOTAL)
                        FROM V_PUNTAJES);


---------------------------------------------------------------------------------------------------------------------------------------

-- 3.6.	CUADRO COMPARATIVO DE POSTULACIONES AL SUBSIDIO EN LOS ULTIMOS DOS AÑOS
SELECT LPAD(TO_CHAR(PO.FECHA_POSTULACION, 'YYYY'),13, ' ') "AÑO POSTULACIÓN",
       NVL(COUNT(CASE 
           WHEN OS.NOM_TITULO_TRAMO = 'TITULO I TRAMO 1' THEN OS.NOM_TITULO_TRAMO
       END), 0) "TITULO I TRAMO 1",
       NVL(COUNT(CASE 
           WHEN OS.NOM_TITULO_TRAMO = 'TITULO I TRAMO 2' THEN OS.NOM_TITULO_TRAMO
       END), 0) "TITULO I TRAMO 2",
       NVL(COUNT(CASE 
           WHEN OS.NOM_TITULO_TRAMO = 'TITULO II' THEN OS.NOM_TITULO_TRAMO
       END), 0) "TITULO II",
       COUNT(P.RUN_POSTULANTE) "TOTAL POSTULANTES"
FROM SYN_POSTULANTE P
JOIN SYN_POSTULACION PO ON (PO.RUN_POSTULANTE = P.RUN_POSTULANTE)
JOIN SYN_OPCION_SUBSIDIO OS ON (OS.ID_SUBSIDIO = PO.ID_SUBSIDIO)
WHERE EXTRACT(YEAR FROM FECHA_POSTULACION) = EXTRACT(YEAR FROM SYSDATE) OR
      EXTRACT(YEAR FROM FECHA_POSTULACION) = EXTRACT(YEAR FROM SYSDATE) - 1
GROUP BY LPAD(TO_CHAR(PO.FECHA_POSTULACION, 'YYYY'),13, ' ')
ORDER BY "AÑO POSTULACIÓN";

-- ALTERNATIVA UTILIZANDO OPERADORES SET
SELECT LPAD(TO_CHAR(PO.FECHA_POSTULACION, 'YYYY'),13, ' ') "AÑO POSTULACIÓN",
       NVL(COUNT(CASE 
           WHEN OS.NOM_TITULO_TRAMO = 'TITULO I TRAMO 1' THEN OS.NOM_TITULO_TRAMO
       END), 0) "TITULO I TRAMO 1",
       NVL(COUNT(CASE 
           WHEN OS.NOM_TITULO_TRAMO = 'TITULO I TRAMO 2' THEN OS.NOM_TITULO_TRAMO
       END), 0) "TITULO I TRAMO 2",
       NVL(COUNT(CASE 
           WHEN OS.NOM_TITULO_TRAMO = 'TITULO II' THEN OS.NOM_TITULO_TRAMO
       END), 0) "TITULO II",
       COUNT(P.RUN_POSTULANTE) "TOTAL POSTULANTES"
FROM SYN_POSTULANTE P
JOIN SYN_POSTULACION PO ON (PO.RUN_POSTULANTE = P.RUN_POSTULANTE)
JOIN SYN_OPCION_SUBSIDIO OS ON (OS.ID_SUBSIDIO = PO.ID_SUBSIDIO)
GROUP BY LPAD(TO_CHAR(PO.FECHA_POSTULACION, 'YYYY'),13, ' ')
MINUS
SELECT LPAD(TO_CHAR(PO.FECHA_POSTULACION, 'YYYY'),13, ' ') "AÑO POSTULACIÓN",
       NVL(COUNT(CASE 
           WHEN OS.NOM_TITULO_TRAMO = 'TITULO I TRAMO 1' THEN OS.NOM_TITULO_TRAMO
       END), 0) "TITULO I TRAMO 1",
       NVL(COUNT(CASE 
           WHEN OS.NOM_TITULO_TRAMO = 'TITULO I TRAMO 2' THEN OS.NOM_TITULO_TRAMO
       END), 0) "TITULO I TRAMO 2",
       NVL(COUNT(CASE 
           WHEN OS.NOM_TITULO_TRAMO = 'TITULO II' THEN OS.NOM_TITULO_TRAMO
       END), 0) "TITULO II",
       COUNT(P.RUN_POSTULANTE) "TOTAL POSTULANTES"
FROM SYN_POSTULANTE P
JOIN SYN_POSTULACION PO ON (PO.RUN_POSTULANTE = P.RUN_POSTULANTE)
JOIN SYN_OPCION_SUBSIDIO OS ON (OS.ID_SUBSIDIO = PO.ID_SUBSIDIO)
WHERE EXTRACT(YEAR FROM FECHA_POSTULACION) <= EXTRACT(YEAR FROM SYSDATE) - 2
GROUP BY LPAD(TO_CHAR(PO.FECHA_POSTULACION, 'YYYY'),13, ' ')
ORDER BY "AÑO POSTULACIÓN";

------------------------------------------------------------------------------------------------------------------------

-- 3.7

CREATE VIEW V_PUNTAJEE AS
 SELECT P.RUN_POSTULANTE RUN,
         PE.PUNTAJE + PC.PUNTAJE + PES.PUNTAJE + NVL2(P.ID_PUEBLO, 500, 0) + PA.PUNTAJE + PT.PUNTAJE + 
         CASE 
            WHEN R.ID_REGION IN (15, 1, 11, 12) THEN 1000
            ELSE 0
        END PUNTAJE_TOTAL
FROM SYN_POSTULANTE P
JOIN (SELECT RUN_POSTULANTE, COUNT(RUN_POSTULANTE) CANT_CARGAS
      FROM SYN_CARGA_FAMILIAR
      GROUP BY RUN_POSTULANTE) A ON (A.RUN_POSTULANTE = P.RUN_POSTULANTE)
JOIN SYN_CARGA_FAMILIAR CF ON (CF.RUN_POSTULANTE = P.RUN_POSTULANTE)
JOIN SYN_ESTADO_CIVIL EC ON (EC.ID_ESTADO_CIVIL = P.ID_ESTADO_CIVIL)
JOIN SYN_POSTULACION PO ON (PO.RUN_POSTULANTE = P.RUN_POSTULANTE)
JOIN SYN_CUENTA_AHORRO CA ON (CA.NRO_CUENTA = PO.NRO_CUENTA)
JOIN SYN_TITULO T ON (T.ID_TITULO = P.ID_TITULO)
JOIN SYN_COMUNA CO ON (CO.ID_COMUNA = P.ID_COMUNA)
JOIN SYN_REGION R ON (R.ID_REGION = CO.ID_REGION)
JOIN SYN_VIVIENDA V ON (V.ID_VIVIENDA = PO.ID_VIVIENDA)
JOIN SYN_OPCION_SUBSIDIO OS ON (OS.ID_SUBSIDIO = PO.ID_SUBSIDIO)
LEFT JOIN SYN_PUEBLO_ORIGINARIO POR ON (POR.ID_PUEBLO = P.ID_PUEBLO)
JOIN SYN_PUNTAJE_EDAD PE ON (TRUNC(MONTHS_BETWEEN(SYSDATE, P.FECHA_NAC) / 12) BETWEEN PE.EDAD_DESDE AND PE.EDAD_HASTA)
JOIN SYN_PUNTAJE_CARGA PC ON (A.CANT_CARGAS BETWEEN PC.MIN_CARGA AND PC.MAX_CARGA)
JOIN SYN_PUNTAJE_ESTADO PES ON (PES.DESC_ESTADO = EC.DESC_ESTADO)
JOIN SYN_PUNTAJE_AHORRO PA ON (CA.MONTO_AHORRADO BETWEEN PA.MIN_VALOR AND PA.MAX_VALOR)
JOIN SYN_PUNTAJE_TITULO PT ON (PT.DESC_TITULO = T.TIPO_TITULO)
ORDER BY P.RUN_POSTULANTE;


UPDATE SYN_POSTULACION
SET ID_ESTADO_POSTULACION = 1
WHERE RUN_POSTULANTE IN (SELECT RUN
                         FROM V_PUNTAJEE
                         WHERE PUNTAJE_TOTAL > (SELECT AVG(PUNTAJE_TOTAL) FROM V_PUNTAJEE));

UPDATE SYN_POSTULACION
SET ID_ESTADO_POSTULACION = 2
WHERE RUN_POSTULANTE IN (SELECT RUN
                         FROM V_PUNTAJEE
                         WHERE PUNTAJE_TOTAL <= (SELECT AVG(PUNTAJE_TOTAL) FROM V_PUNTAJEE) AND
                               PUNTAJE_TOTAL >= (SELECT AVG(PUNTAJE_TOTAL) FROM V_PUNTAJEE) - 400);

UPDATE SYN_POSTULACION
SET ID_ESTADO_POSTULACION = 3
WHERE RUN_POSTULANTE IN (SELECT RUN
                         FROM V_PUNTAJEE
                         WHERE PUNTAJE_TOTAL < (SELECT AVG(PUNTAJE_TOTAL) FROM V_PUNTAJEE) - 400);



